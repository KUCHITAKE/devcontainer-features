name: "Release Features"
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        default: 'v1.0.0'

jobs:
  validate-before-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: "Install devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Validate all features before release"
        run: |
          echo "Running comprehensive tests before release..."
          
          # Test all features
          for feature in flutter buf opencommit ros2; do
            echo "Testing feature: $feature"
            devcontainer features test -f $feature
          done

      - name: "Validate Flutter feature specifically"
        run: |
          echo "Running Flutter-specific validation..."
          
          # Test all Flutter scenarios
          devcontainer features test -f flutter
          
          # Build test container
          docker build -f test-flutter.Dockerfile -t test-flutter-release .
          
          # Validate installation
          docker run --rm test-flutter-release flutter --version
          docker run --rm test-flutter-release dart --version
          docker run --rm test-flutter-release flutter doctor --version

  create-release:
    needs: validate-before-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: "Get version"
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: "Generate release notes"
        id: release_notes
        run: |
          cat > release_notes.md << EOF
          # DevContainer Features Release ${{ steps.get_version.outputs.version }}
          
          ## Features Included
          
          ### Flutter DevContainer Feature
          - ‚úÖ Cross-architecture support (x86_64, aarch64)
          - ‚úÖ Multiple Flutter channels (stable, beta, dev, master)
          - ‚úÖ Web development support
          - ‚úÖ Automatic dependency management
          - ‚úÖ Git repository initialization
          - ‚úÖ Analytics disabled by default
          
          ### Other Features
          - ‚úÖ Buf Protocol Buffers toolchain
          - ‚úÖ OpenCommit AI commit tool
          - ‚úÖ ROS2 robotics framework
          
          ## Installation
          
          Add to your \`.devcontainer/devcontainer.json\`:
          
          \`\`\`json
          {
            "features": {
              "ghcr.io/your-username/devcontainer-features/flutter:${{ steps.get_version.outputs.version }}": {
                "version": "stable",
                "channel": "stable",
                "enableWebSupport": true
              }
            }
          }
          \`\`\`
          
          ## Testing
          
          All features have been tested with:
          - ‚úÖ Multiple base images (Debian, Ubuntu)
          - ‚úÖ Different architectures (amd64, arm64)
          - ‚úÖ Various configuration options
          - ‚úÖ Project creation and compilation
          
          ## Documentation
          
          See individual feature README files for detailed usage instructions.
          EOF

      - name: "Create GitHub Release"
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: DevContainer Features ${{ steps.get_version.outputs.version }}
          body_path: release_notes.md
          draft: false
          prerelease: false

  publish-to-registry:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Get version"
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: "Publish features to registry"
        run: |
          echo "Publishing DevContainer Features to GitHub Container Registry..."
          
          # This would typically use the devcontainer CLI to publish
          # For now, we'll create a placeholder that shows the structure
          
          echo "Features would be published to:"
          echo "- ghcr.io/${{ github.repository }}/flutter:${{ steps.get_version.outputs.version }}"
          echo "- ghcr.io/${{ github.repository }}/buf:${{ steps.get_version.outputs.version }}"
          echo "- ghcr.io/${{ github.repository }}/opencommit:${{ steps.get_version.outputs.version }}"
          echo "- ghcr.io/${{ github.repository }}/ros2:${{ steps.get_version.outputs.version }}"
          
          # TODO: Implement actual publishing when devcontainer CLI supports it
          # devcontainer features publish --registry ghcr.io --namespace ${{ github.repository }}

  notify-success:
    needs: [validate-before-release, create-release, publish-to-registry]
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: "Notify successful release"
        run: |
          echo "üéâ DevContainer Features release completed successfully!"
          echo "Version: ${{ needs.create-release.outputs.version }}"
          echo "All features have been validated and published."

  notify-failure:
    needs: [validate-before-release, create-release, publish-to-registry]
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: "Notify failed release"
        run: |
          echo "‚ùå DevContainer Features release failed!"
          echo "Please check the logs and fix any issues before retrying."
          exit 1